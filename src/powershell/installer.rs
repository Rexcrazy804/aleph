use std::fs;

const DEFAULT_PROFILE: &'static str = "\
# This file is automatically generated by the package manager.
$env:PATH = (
$env:PATH)
";

pub fn append_to_path(home_dir: &str, paths: &Vec<String>) -> std::io::Result<()> {
    let profile_path =
        home_dir.to_owned() + "/Documents/PowerShell/Microsoft.PowerShell_profile.ps1";

    //let profile_path = "./config.ps1";
    let mut ps_profile = match fs::read_to_string(&profile_path) {
        Ok(content) => content,
        Err(_) => {
            println!("FILE DOES NOT EXIST: {profile_path}");
            String::from(DEFAULT_PROFILE)
        }
    };
    if !ps_profile.contains("$env:PATH = (") {
        ps_profile.push_str(&DEFAULT_PROFILE);
    }

    let mut modified_ps_profile = String::new();
    let mut intermediate_path_buffer: Vec<String> = Vec::new();
    for path in paths {
        let replaced_path = path.replace(home_dir, "$HOME");
        // <space><space>"PATH;" +
        intermediate_path_buffer.push("  \"".to_owned() + &replaced_path + ";\"" + " +");
    }
    let mut paths_entry_flag = false;

    for line in ps_profile.lines() {
        if line.contains("$env:PATH = (") {
            paths_entry_flag = true;
            modified_ps_profile.push_str(&(line.to_owned() + "\n"));
            continue;
        }
        if line.contains("$env:PATH)") {
            paths_entry_flag = false;
            intermediate_path_buffer.sort();
            intermediate_path_buffer.dedup_by(|a, b| {
                if a == b {
                    println!("path {a} already installed ");
                    true
                } else {
                    false
                }
            });
            for line in intermediate_path_buffer.clone() {
                modified_ps_profile.push_str(&(line + "\n"));
            }
        }

        if paths_entry_flag {
            intermediate_path_buffer.push(line.to_owned());
        } else {
            modified_ps_profile.push_str(&(line.to_owned() + "\n"));
        }
    }

    fs::write(profile_path, modified_ps_profile)?;
    println!("installed program to path");
    Ok(())
}
